#!/bin/bash

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è SMP Help
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —á–∏—Å—Ç—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
# –ó–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING:${NC} $1"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR:${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

question() {
    echo -e "${CYAN}[–í–û–ü–†–û–°]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç root
if [ "$EUID" -ne 0 ]; then
    error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Node.js –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
if command -v node >/dev/null 2>&1; then
    NODE_VERSION=$(node --version)
    log "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è Node.js: $NODE_VERSION"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä—Å–∏—è Node.js –ø–æ–¥—Ö–æ–¥—è—â–∞—è
    NODE_MAJOR=$(echo $NODE_VERSION | cut -d'.' -f1 | sed 's/v//')
    if [ "$NODE_MAJOR" -lt 20 ]; then
        warn "‚ö†Ô∏è –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è Node.js ($NODE_VERSION) –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞ —Å –ø—Ä–æ–µ–∫—Ç–æ–º"
        warn "‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–µ—Ä—Å–∏—è Node.js 20 –∏–ª–∏ –≤—ã—à–µ"
        warn "‚ö†Ô∏è –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∏—Ç Node.js 20 –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    fi
else
    log "‚ÑπÔ∏è Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
read_input() {
    local prompt="$1"
    local var_name="$2"
    local is_password="$3"
    local default_value="$4"
    
    if [ "$is_password" = "true" ]; then
        if [ -n "$default_value" ]; then
            question "$prompt (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: —Å–∫—Ä—ã—Ç–æ)"
        else
            question "$prompt"
        fi
        read -s input
        echo
    else
        if [ -n "$default_value" ]; then
            question "$prompt (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $default_value)"
        else
            question "$prompt"
        fi
        read input
    fi
    
    if [ -z "$input" ] && [ -n "$default_value" ]; then
        input="$default_value"
    fi
    
    eval "$var_name='$input'"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
generate_password() {
    local length=${1:-32}
    openssl rand -base64 $length | tr -d "=+/" | cut -c1-$length
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ JWT —Å–µ–∫—Ä–µ—Ç–∞
generate_jwt_secret() {
    openssl rand -base64 64 | tr -d "=+/"
}

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
clear
echo -e "${BLUE}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                    SMP Help Deployment                     ‚ïë"
echo "‚ïë              –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏                 ‚ïë"
echo "‚ïë                                                              ‚ïë"
echo "‚ïë  –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:                                               ‚ïë"
echo "‚ïë  ‚Ä¢ –ß–∏—Å—Ç—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–∞ –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä                         ‚ïë"
echo "‚ïë  ‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞                         ‚ïë"
echo "‚ïë  ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫—É –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤                              ‚ïë"
echo "‚ïë  ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–æ–º–µ–Ω–∞                          ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
echo
question "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:"
echo "1) –ß–∏—Å—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (–Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä)"
echo "2) –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"
echo "3) –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ (—É–¥–∞–ª–∏—Ç—å –≤—Å–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–Ω–æ–≤–æ)"
read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): " mode

case $mode in
    1) INSTALL_MODE="fresh" ;;
    2) INSTALL_MODE="update" ;;
    3) INSTALL_MODE="reinstall" ;;
    *) error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"; exit 1 ;;
esac

log "–í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: $INSTALL_MODE"

# –°–±–æ—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ
echo
info "=== –°–ë–û–† –ò–ù–§–û–†–ú–ê–¶–ò–ò –û –ü–†–û–ï–ö–¢–ï ==="

read_input "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞" PROJECT_NAME "false" "smp-help"
read_input "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞" PROJECT_USER "false" "smp-help"
read_input "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: helpsmp.ru)" DOMAIN "false" "helpsmp.ru"
read_input "–í–≤–µ–¥–∏—Ç–µ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é" WORK_DIR "false" "/var/www/$DOMAIN"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–º–µ–Ω–µ
echo
info "‚ÑπÔ∏è –î–æ–º–µ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è:"
info "  - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
info "  - SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ (www.$DOMAIN –∏ $DOMAIN)"
info "  - –ü–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (NUXT_PUBLIC_APP_URL)"
info "  - API –±–∞–∑–æ–≤–æ–≥–æ URL (NUXT_PUBLIC_API_BASE_URL)"
echo
warn "‚ö†Ô∏è –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–º–µ–Ω $DOMAIN –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ DNS –∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!"
warn "‚ö†Ô∏è –î–ª—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–æ–º–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞!"

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ GitHub
echo
info "=== –ù–ê–°–¢–†–û–ô–ö–ê GITHUB ==="

read_input "–í–≤–µ–¥–∏—Ç–µ GitHub username" GITHUB_USER "false" "JohnOpioid"
read_input "–í–≤–µ–¥–∏—Ç–µ GitHub Personal Access Token" GITHUB_TOKEN "true" ""
read_input "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è" GITHUB_REPO "false" "$PROJECT_NAME"

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
if [ -n "$GITHUB_TOKEN" ]; then
    GITHUB_URL="https://$GITHUB_USER:$GITHUB_TOKEN@github.com/$GITHUB_USER/$GITHUB_REPO.git"
else
    GITHUB_URL="https://github.com/$GITHUB_USER/$GITHUB_REPO.git"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo
info "=== –ù–ê–°–¢–†–û–ô–ö–ê MONGODB ==="

read_input "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" MONGO_DB "false" "$PROJECT_NAME"
read_input "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è MongoDB" MONGO_USER "false" "help-smp-user"

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è MongoDB
MONGO_PASS=$(generate_password 16)
log "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ø–∞—Ä–æ–ª—å –¥–ª—è MongoDB: $MONGO_PASS"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
echo
info "=== –ù–ê–°–¢–†–û–ô–ö–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò ==="

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º JWT —Å–µ–∫—Ä–µ—Ç
JWT_SECRET=$(generate_jwt_secret)
log "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω JWT —Å–µ–∫—Ä–µ—Ç"

read_input "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $PROJECT_USER" USER_PASSWORD "true" ""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ AI (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo
info "=== –ù–ê–°–¢–†–û–ô–ö–ò AI (–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û) ==="

read_input "–í–≤–µ–¥–∏—Ç–µ GigaChat API Key (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º)" GIGACHAT_API_KEY "true" ""
read_input "–í–≤–µ–¥–∏—Ç–µ GigaChat Client ID (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º)" GIGACHAT_CLIENT_ID "false" ""
read_input "–í–≤–µ–¥–∏—Ç–µ GigaChat Scope (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º)" GIGACHAT_SCOPE "false" ""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ email (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo
info "=== –ù–ê–°–¢–†–û–ô–ö–ò EMAIL (–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û) ==="

read_input "–í–≤–µ–¥–∏—Ç–µ SMTP Host (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º)" SMTP_HOST "false" ""
read_input "–í–≤–µ–¥–∏—Ç–µ SMTP Port (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º)" SMTP_PORT "false" "587"
read_input "–í–≤–µ–¥–∏—Ç–µ SMTP User (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º)" SMTP_USER "false" ""
read_input "–í–≤–µ–¥–∏—Ç–µ SMTP Password (–∏–ª–∏ –æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º)" SMTP_PASS "true" ""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Yandex Maps
echo
info "=== –ù–ê–°–¢–†–û–ô–ö–ò YANDEX MAPS ==="

read_input "–í–≤–µ–¥–∏—Ç–µ Yandex Maps API Key" YAMAPS_API_KEY "false" "0cf3bb2c-e67f-4006-8a3e-c5df09b9da6c"

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
echo
info "=== –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ù–ê–°–¢–†–û–ï–ö ==="

echo "–ü—Ä–æ–µ–∫—Ç: $PROJECT_NAME"
echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $PROJECT_USER"
echo "–î–æ–º–µ–Ω: $DOMAIN"
echo "–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $WORK_DIR"
echo "GitHub: $GITHUB_URL"
echo "MongoDB DB: $MONGO_DB"
echo "MongoDB User: $MONGO_USER"
echo "MongoDB Password: $MONGO_PASS"
echo "JWT Secret: [—Å–∫—Ä—ã—Ç–æ]"
echo "GigaChat API Key: $([ -n "$GIGACHAT_API_KEY" ] && echo "[—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω]" || echo "[–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω]")"
echo "SMTP: $([ -n "$SMTP_HOST" ] && echo "[–Ω–∞—Å—Ç—Ä–æ–µ–Ω]" || echo "[–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω]")"
echo "Yandex Maps: $YAMAPS_API_KEY"

echo
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å —ç—Ç–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏? (y/N): " confirm

if [[ ! $confirm =~ ^[Yy]$ ]]; then
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
    exit 0
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç–∏
PROJECT_DIR="/home/$PROJECT_USER/$GITHUB_REPO"
LOG_DIR="/var/log/$PROJECT_NAME"

log "–ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏..."

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    
    apt update && apt upgrade -y
    apt install -y curl wget git unzip software-properties-common apt-transport-https ca-certificates gnupg lsb-release
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js 20
    log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js 20..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ Node.js
    if command -v node >/dev/null 2>&1; then
        CURRENT_NODE=$(node --version)
        log "‚ÑπÔ∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –≤–µ—Ä—Å–∏—è Node.js: $CURRENT_NODE"
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é –µ—Å–ª–∏ –æ–Ω–∞ —É—Å—Ç–∞—Ä–µ–ª–∞
        NODE_MAJOR=$(echo $CURRENT_NODE | cut -d'.' -f1 | sed 's/v//')
        if [ "$NODE_MAJOR" -lt 20 ]; then
            log "üóëÔ∏è –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à—É—é –≤–µ—Ä—Å–∏—é Node.js..."
            apt remove nodejs -y 2>/dev/null || true
        fi
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js 20
    curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
    apt install -y nodejs
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    NEW_NODE=$(node --version)
    NEW_NPM=$(npm --version)
    log "‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NEW_NODE"
    log "‚úÖ npm —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NEW_NPM"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MongoDB
    log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MongoDB..."
    curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | gpg --dearmor -o /usr/share/keyrings/mongodb-server-7.0.gpg
    echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-7.0.list
    apt update
    apt install -y mongodb-org
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏ –≤–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ MongoDB
    systemctl start mongod
    systemctl enable mongod
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nginx
    log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nginx..."
    apt install -y nginx
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PM2
    log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PM2..."
    npm install -g pm2
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot
    log "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot..."
    apt install -y certbot python3-certbot-nginx
    
    log "‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
setup_user_and_directories() {
    log "üë§ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏..."
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if ! id "$PROJECT_USER" &>/dev/null; then
        useradd -m -s /bin/bash $PROJECT_USER
        usermod -aG sudo $PROJECT_USER
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
        if [ -n "$USER_PASSWORD" ]; then
            echo "$PROJECT_USER:$USER_PASSWORD" | chpasswd
        fi
        
        log "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $PROJECT_USER —Å–æ–∑–¥–∞–Ω"
    else
        log "‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $PROJECT_USER —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    mkdir -p $WORK_DIR
    mkdir -p $LOG_DIR
    chown -R $PROJECT_USER:$PROJECT_USER $WORK_DIR
    chown -R $PROJECT_USER:$PROJECT_USER $LOG_DIR
    
    log "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MongoDB
setup_mongodb() {
    log "üóÑÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º MongoDB..."
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ MongoDB
    sleep 5
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    mongosh --eval "
        use $MONGO_DB;
        try {
            db.createUser({
                user: '$MONGO_USER',
                pwd: '$MONGO_PASS',
                roles: ['readWrite']
            });
            print('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å MongoDB —Å–æ–∑–¥–∞–Ω');
        } catch (e) {
            if (e.code === 51003) {
                print('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å MongoDB —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
            } else {
                print('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è MongoDB:', e.message);
            }
        }
    "
    
    log "‚úÖ MongoDB –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
clone_and_build() {
    log "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º –∏ —Å–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
    
    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–µ–∫—Ç–∞
    sudo -u $PROJECT_USER bash -c "
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–æ–º–∞—à–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        cd /home/$PROJECT_USER
        
        # –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        if [ -d '$GITHUB_REPO' ]; then
            echo 'üìÅ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º...'
            cd $GITHUB_REPO
            git pull origin main
        else
            echo 'üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π...'
            git clone $GITHUB_URL
            cd $GITHUB_REPO
        fi
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –æ–∫—Ä—É–∂–µ–Ω–∏—è
        echo '‚öôÔ∏è –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –æ–∫—Ä—É–∂–µ–Ω–∏—è...'
        cat > .env.production << 'EOF'
# Production Environment Variables
NODE_ENV=production
NUXT_PUBLIC_API_BASE_URL=https://$DOMAIN/api
NUXT_PUBLIC_APP_URL=https://$DOMAIN
PORT=3000

# MongoDB
MONGODB_URI=mongodb://$MONGO_USER:$MONGO_PASS@localhost:27017/$MONGO_DB

# JWT Secret
JWT_SECRET=$JWT_SECRET

# AI Configuration
GIGACHAT_API_KEY=$GIGACHAT_API_KEY
GIGACHAT_CLIENT_ID=$GIGACHAT_CLIENT_ID
GIGACHAT_SCOPE=$GIGACHAT_SCOPE
GIGACHAT_API_URL=https://gigachat.devices.sberbank.ru/api/v1

# Email Configuration
SMTP_HOST=$SMTP_HOST
SMTP_PORT=$SMTP_PORT
SMTP_USER=$SMTP_USER
SMTP_PASS=$SMTP_PASS

# Yandex Maps
YAMAPS_API_KEY=$YAMAPS_API_KEY
EOF
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...'
        npm install
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Node.js
        NODE_VERSION=\$(node --version)
        echo \"üìã –í–µ—Ä—Å–∏—è Node.js: \$NODE_VERSION\"
        
        # –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç
        echo 'üî® –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç...'
        if npm run build; then
            echo '‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ'
        else
            echo '‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞'
            echo 'üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏'
            exit 1
        fi
    "
}

# –§—É–Ω–∫—Ü–∏—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
copy_files() {
    log "üìÅ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é..."
    
    # –û—á–∏—â–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    rm -rf $WORK_DIR/*
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    cp -r /home/$PROJECT_USER/$GITHUB_REPO/.output/public/* $WORK_DIR/
    cp -r /home/$PROJECT_USER/$GITHUB_REPO/.output/server/* $WORK_DIR/
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
    chown -R $PROJECT_USER:$PROJECT_USER $WORK_DIR
    chmod -R 755 $WORK_DIR
    
    log "‚úÖ –§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PM2
setup_pm2() {
    log "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º PM2..."
    
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    cd $WORK_DIR
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ index.mjs
    if [ ! -f "index.mjs" ]; then
        error "‚ùå –§–∞–π–ª index.mjs –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $WORK_DIR"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —Ñ–∞–π–ª
    chmod +x index.mjs
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
    if ! node --check index.mjs; then
        error "‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—Å index.mjs –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2 –¥–ª—è ES –º–æ–¥—É–ª–µ–π
    sudo -u $PROJECT_USER bash -c "
        cd $WORK_DIR
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2 –¥–ª—è ES –º–æ–¥—É–ª–µ–π
        cat > ecosystem.config.mjs << 'EOF'
export default {
  apps: [{
    name: '$PROJECT_NAME',
    script: './index.mjs',
    cwd: '$WORK_DIR',
    instances: 1,
    exec_mode: 'fork',
    interpreter: 'node',
    interpreter_args: '--experimental-modules',
    env: {
      NODE_ENV: 'production',
      PORT: 3000,
      NUXT_PUBLIC_API_BASE_URL: 'https://$DOMAIN/api',
      NUXT_PUBLIC_APP_URL: 'https://$DOMAIN',
      MONGODB_URI: 'mongodb://$MONGO_USER:$MONGO_PASS@localhost:27017/$MONGO_DB',
      JWT_SECRET: '$JWT_SECRET',
      ADMIN_SETUP_TOKEN: 'your-admin-token-here',
      GIGACHAT_API_KEY: '$GIGACHAT_API_KEY',
      GIGACHAT_CLIENT_ID: '$GIGACHAT_CLIENT_ID',
      GIGACHAT_SCOPE: '$GIGACHAT_SCOPE',
      GIGACHAT_API_URL: 'https://gigachat.devices.sberbank.ru/api/v1',
      SMTP_HOST: '$SMTP_HOST',
      SMTP_PORT: '$SMTP_PORT',
      SMTP_USER: '$SMTP_USER',
      SMTP_PASS: '$SMTP_PASS',
      YAMAPS_API_KEY: '$YAMAPS_API_KEY'
    },
    log_file: '$LOG_DIR/smp-help.log',
    out_file: '$LOG_DIR/smp-help-out.log',
    error_file: '$LOG_DIR/smp-help-error.log',
    log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
    merge_logs: true,
    max_memory_restart: '1G',
    restart_delay: 4000,
    max_restarts: 10,
    min_uptime: '10s'
  }]
}
EOF
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
        pm2 stop $PROJECT_NAME 2>/dev/null || true
        pm2 delete $PROJECT_NAME 2>/dev/null || true
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        pm2 start ecosystem.config.mjs
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
        sleep 3
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        pm2 status
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        pm2 save
        pm2 startup
    "
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ PM2 –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    if sudo -u $PROJECT_USER pm2 status | grep -q "$PROJECT_NAME.*online"; then
        log "‚úÖ PM2 –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
    else
        warn "‚ö†Ô∏è PM2 –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å"
        log "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: su - $PROJECT_USER && pm2 logs $PROJECT_NAME"
        
        # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å CommonJS –≤–µ—Ä—Å–∏—é –∫–∞–∫ fallback
        log "üîß –°–æ–∑–¥–∞–µ–º CommonJS –≤–µ—Ä—Å–∏—é –∫–∞–∫ fallback..."
        sudo -u $PROJECT_USER bash -c "
            cd $WORK_DIR
            
            # –°–æ–∑–¥–∞–µ–º CommonJS –≤–µ—Ä—Å–∏—é
            cat > index.js << 'EOF'
const { createServer } = require('http');
const { readFileSync, existsSync } = require('fs');
const { join, extname } = require('path');

const server = createServer((req, res) => {
  try {
    const url = new URL(req.url, 'http://localhost');
    const pathname = url.pathname;
    
    if (pathname === '/') {
      res.writeHead(200, { 'Content-Type': 'text/html' });
      res.end('SMP Help Server is running!');
    } else if (pathname.startsWith('/_nuxt/')) {
      const filePath = join(process.cwd(), pathname);
      if (existsSync(filePath)) {
        const file = readFileSync(filePath);
        const ext = extname(filePath);
        let contentType = 'application/javascript';
        
        if (ext === '.css') contentType = 'text/css';
        if (ext === '.js') contentType = 'application/javascript';
        if (ext === '.json') contentType = 'application/json';
        
        res.writeHead(200, { 'Content-Type': contentType });
        res.end(file);
      } else {
        res.writeHead(404);
        res.end('File not found');
      }
    } else {
      res.writeHead(404);
      res.end('Not Found');
    }
  } catch (error) {
    console.error('Error:', error);
    res.writeHead(500);
    res.end('Internal Server Error');
  }
});

const PORT = process.env.PORT || 3000;
server.listen(PORT, () => {
  console.log(\`SMP Help Server running on port \${PORT}\`);
});
EOF
            
            # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2 –¥–ª—è CommonJS
            cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [{
    name: '$PROJECT_NAME',
    script: './index.js',
    cwd: '$WORK_DIR',
    instances: 1,
    exec_mode: 'fork',
    env: {
      NODE_ENV: 'production',
      PORT: 3000,
      NUXT_PUBLIC_API_BASE_URL: 'https://$DOMAIN/api',
      NUXT_PUBLIC_APP_URL: 'https://$DOMAIN',
      MONGODB_URI: 'mongodb://$MONGO_USER:$MONGO_PASS@localhost:27017/$MONGO_DB',
      JWT_SECRET: '$JWT_SECRET',
      ADMIN_SETUP_TOKEN: 'your-admin-token-here',
      GIGACHAT_API_KEY: '$GIGACHAT_API_KEY',
      GIGACHAT_CLIENT_ID: '$GIGACHAT_CLIENT_ID',
      GIGACHAT_SCOPE: '$GIGACHAT_SCOPE',
      GIGACHAT_API_URL: 'https://gigachat.devices.sberbank.ru/api/v1',
      SMTP_HOST: '$SMTP_HOST',
      SMTP_PORT: '$SMTP_PORT',
      SMTP_USER: '$SMTP_USER',
      SMTP_PASS: '$SMTP_PASS',
      YAMAPS_API_KEY: '$YAMAPS_API_KEY'
    },
    log_file: '$LOG_DIR/smp-help.log',
    out_file: '$LOG_DIR/smp-help-out.log',
    error_file: '$LOG_DIR/smp-help-error.log',
    log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
    merge_logs: true,
    max_memory_restart: '1G',
    restart_delay: 4000,
    max_restarts: 10,
    min_uptime: '10s'
  }]
};
EOF
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
            pm2 stop $PROJECT_NAME 2>/dev/null || true
            pm2 delete $PROJECT_NAME 2>/dev/null || true
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            pm2 start ecosystem.config.js
            
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
            sleep 3
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
            pm2 status
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            pm2 save
        "
        
        if sudo -u $PROJECT_USER pm2 status | grep -q "$PROJECT_NAME.*online"; then
            log "‚úÖ PM2 –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å CommonJS –≤–µ—Ä—Å–∏–µ–π"
        else
            error "‚ùå PM2 –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Nginx
setup_nginx() {
    log "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx..."
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
    cat > /etc/nginx/sites-available/$DOMAIN << 'EOF'
server {
    listen 80;
    server_name DOMAIN_PLACEHOLDER www.DOMAIN_PLACEHOLDER;
    
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
    }
    
    location /_nuxt/ {
        alias WORK_DIR_PLACEHOLDER/_nuxt/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    access_log /var/log/nginx/DOMAIN_PLACEHOLDER.access.log;
    error_log /var/log/nginx/DOMAIN_PLACEHOLDER.error.log;
}
EOF
    
    # –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã
    sed -i "s/DOMAIN_PLACEHOLDER/$DOMAIN/g" /etc/nginx/sites-available/$DOMAIN
    sed -i "s|WORK_DIR_PLACEHOLDER|$WORK_DIR|g" /etc/nginx/sites-available/$DOMAIN
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    ln -sf /etc/nginx/sites-available/$DOMAIN /etc/nginx/sites-enabled/
    rm -f /etc/nginx/sites-enabled/default
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    nginx -t
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Nginx
    systemctl restart nginx
    systemctl enable nginx
    
    log "‚úÖ Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ firewall
setup_firewall() {
    log "üî• –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall..."
    
    ufw allow ssh
    ufw allow 'Nginx Full'
    ufw --force enable
    
    log "‚úÖ Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
create_management_scripts() {
    log "üìù –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
    
    # –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    sudo -u $PROJECT_USER bash -c "
        cat > update-app.sh << 'EOF'
#!/bin/bash

set -e

echo \"üîÑ –û–±–Ω–æ–≤–ª—è–µ–º $PROJECT_NAME...\"

cd $PROJECT_DIR

echo \"üì• –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ GitHub...\"
git pull origin main

echo \"üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...\"
npm install

echo \"üî® –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç...\"
npm run build

echo \"üìÅ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã...\"
sudo cp -r .output/public/* $WORK_DIR/
sudo cp -r .output/server/* $WORK_DIR/
sudo chown -R $PROJECT_USER:$PROJECT_USER $WORK_DIR

echo \"üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...\"
pm2 restart $PROJECT_NAME

echo \"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\"
pm2 status
EOF
        
        chmod +x update-app.sh
    "
    
    # –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞
    sudo -u $PROJECT_USER bash -c "
        cat > start-app.sh << 'EOF'
#!/bin/bash

echo \"üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º $PROJECT_NAME...\"

pm2 stop $PROJECT_NAME 2>/dev/null || true
pm2 delete $PROJECT_NAME 2>/dev/null || true

# –ü—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å ES –º–æ–¥—É–ª–∏
if [ -f \"$WORK_DIR/index.mjs\" ]; then
    echo \"üì¶ –ó–∞–ø—É—Å–∫–∞–µ–º ES –º–æ–¥—É–ª–∏...\"
    pm2 start ecosystem.config.mjs
else
    echo \"üì¶ –ó–∞–ø—É—Å–∫–∞–µ–º CommonJS...\"
    pm2 start ecosystem.config.js
fi

echo \"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ!\"
echo \"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: pm2 status\"
EOF
        
        chmod +x start-app.sh
    "
    
    # –°–∫—Ä–∏–ø—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è PM2
    sudo -u $PROJECT_USER bash -c "
        cat > fix-pm2.sh << 'EOF'
#!/bin/bash

echo \"üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å PM2...\"

cd $WORK_DIR

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ index.mjs
if [ -f \"index.mjs\" ]; then
    echo \"‚úÖ –ù–∞–π–¥–µ–Ω index.mjs\"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
    chmod +x index.mjs
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å
    if node --check index.mjs; then
        echo \"‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å index.mjs –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω\"
    else
        echo \"‚ùå –°–∏–Ω—Ç–∞–∫—Å–∏—Å index.mjs –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω\"
        exit 1
    fi
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PM2
    pm2 stop $PROJECT_NAME 2>/dev/null || true
    pm2 delete $PROJECT_NAME 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º ES –º–æ–¥—É–ª–∏
    pm2 start ecosystem.config.mjs
    
    # –ñ–¥–µ–º
    sleep 3
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    pm2 status
    
else
    echo \"‚ùå index.mjs –Ω–µ –Ω–∞–π–¥–µ–Ω\"
    exit 1
fi

echo \"‚úÖ PM2 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω!\"
EOF
        
        chmod +x fix-pm2.sh
    "
    
    log "‚úÖ –°–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DNS –¥–æ–º–µ–Ω–∞
check_domain_dns() {
    log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–º–µ–Ω–∞ $DOMAIN..."
    
    if command -v nslookup >/dev/null 2>&1; then
        DOMAIN_IP=$(nslookup $DOMAIN | grep -A1 "Name:" | tail -1 | awk '{print $2}')
        if [ -n "$DOMAIN_IP" ]; then
            log "‚úÖ –î–æ–º–µ–Ω $DOMAIN —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP: $DOMAIN_IP"
            
            # –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
            SERVER_IP=$(curl -s ifconfig.me 2>/dev/null || curl -s ipinfo.io/ip 2>/dev/null || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
            if [ "$SERVER_IP" != "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" ]; then
                if [ "$DOMAIN_IP" = "$SERVER_IP" ]; then
                    log "‚úÖ DNS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!"
                else
                    warn "‚ö†Ô∏è DNS —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–π IP ($DOMAIN_IP), –∞ —Å–µ—Ä–≤–µ—Ä –∏–º–µ–µ—Ç IP: $SERVER_IP"
                    warn "‚ö†Ô∏è –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –¥–æ–º–µ–Ω–∞"
                fi
            else
                warn "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP —Å–µ—Ä–≤–µ—Ä–∞"
            fi
        else
            warn "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP –¥–æ–º–µ–Ω–∞ $DOMAIN"
        fi
    else
        warn "‚ö†Ô∏è nslookup –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ DNS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä—É—á–Ω—É—é"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º MongoDB
    if systemctl is-active --quiet mongod; then
        log "‚úÖ MongoDB —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "‚ùå MongoDB –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Nginx
    if systemctl is-active --quiet nginx; then
        log "‚úÖ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        error "‚ùå Nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PM2
    log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º PM2..."
    PM2_STATUS=$(sudo -u $PROJECT_USER pm2 status 2>/dev/null)
    if echo "$PM2_STATUS" | grep -q "$PROJECT_NAME.*online"; then
        log "‚úÖ PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    elif echo "$PM2_STATUS" | grep -q "$PROJECT_NAME.*stopped"; then
        error "‚ùå PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        log "üìã –õ–æ–≥–∏ PM2:"
        sudo -u $PROJECT_USER pm2 logs $PROJECT_NAME --lines 10
    elif echo "$PM2_STATUS" | grep -q "$PROJECT_NAME.*errored"; then
        error "‚ùå PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π"
        log "üìã –õ–æ–≥–∏ PM2:"
        sudo -u $PROJECT_USER pm2 logs $PROJECT_NAME --lines 10
    else
        error "‚ùå PM2 –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        log "üìã –°—Ç–∞—Ç—É—Å PM2:"
        echo "$PM2_STATUS"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
    log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç 3000..."
    if command -v netstat >/dev/null 2>&1; then
        PORT_STATUS=$(netstat -tlnp | grep ":3000")
        if [ -n "$PORT_STATUS" ]; then
            log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 3000"
            echo "$PORT_STATUS"
        else
            error "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 3000"
        fi
    elif command -v ss >/dev/null 2>&1; then
        PORT_STATUS=$(ss -tlnp | grep ":3000")
        if [ -n "$PORT_STATUS" ]; then
            log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 3000"
            echo "$PORT_STATUS"
        else
            error "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 3000"
        fi
    else
        warn "‚ö†Ô∏è netstat –∏ ss –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ lsof..."
        PORT_STATUS=$(lsof -i :3000 2>/dev/null)
        if [ -n "$PORT_STATUS" ]; then
            log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 3000"
            echo "$PORT_STATUS"
        else
            error "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç 3000"
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã..."
    if [ -d "$WORK_DIR/_nuxt" ]; then
        log "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è _nuxt –Ω–∞–π–¥–µ–Ω–∞"
        ls -la "$WORK_DIR/_nuxt/" | head -5
    else
        error "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è _nuxt –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞
    log "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞..."
    if command -v curl >/dev/null 2>&1; then
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://$DOMAIN 2>/dev/null)
        if [ "$HTTP_CODE" = "200" ]; then
            log "‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $HTTP_CODE)"
        else
            error "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $HTTP_CODE)"
        fi
    else
        warn "‚ö†Ô∏è curl –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç –≤—Ä—É—á–Ω—É—é: http://$DOMAIN"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    case $INSTALL_MODE in
        "fresh")
            log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —á–∏—Å—Ç—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
            install_dependencies
            setup_user_and_directories
            setup_mongodb
            clone_and_build
            copy_files
            setup_pm2
            setup_nginx
            setup_firewall
            create_management_scripts
            check_domain_dns
            check_status
            ;;
        "update")
            log "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
            setup_user_and_directories
            clone_and_build
            copy_files
            setup_pm2
            create_management_scripts
            check_domain_dns
            check_status
            ;;
        "reinstall")
            log "üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫—É..."
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
            sudo -u $PROJECT_USER pm2 stop $PROJECT_NAME 2>/dev/null || true
            sudo -u $PROJECT_USER pm2 delete $PROJECT_NAME 2>/dev/null || true
            systemctl stop nginx 2>/dev/null || true
            systemctl stop mongod 2>/dev/null || true
            
            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã
            rm -rf $WORK_DIR
            rm -rf $PROJECT_DIR
            rm -rf $LOG_DIR
            
            # –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
            install_dependencies
            setup_user_and_directories
            setup_mongodb
            clone_and_build
            copy_files
            setup_pm2
            setup_nginx
            setup_firewall
            create_management_scripts
            check_domain_dns
            check_status
            ;;
    esac
    
    log "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    log ""
    log "üìã –†–µ–∑—É–ª—å—Ç–∞—Ç:"
    log "‚úÖ –ü—Ä–æ–µ–∫—Ç: $PROJECT_NAME"
    log "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $PROJECT_USER"
    log "‚úÖ –î–æ–º–µ–Ω: $DOMAIN"
    log "‚úÖ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $WORK_DIR"
    log "‚úÖ MongoDB: $MONGO_DB (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $MONGO_USER)"
    log "‚úÖ PM2 –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    log "‚úÖ Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    log "‚úÖ Firewall –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    log ""
    log "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    log "  - –°—Ç–∞—Ç—É—Å: su - $PROJECT_USER && pm2 status"
    log "  - –õ–æ–≥–∏: su - $PROJECT_USER && pm2 logs $PROJECT_NAME"
    log "  - –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: su - $PROJECT_USER && ./update-app.sh"
    log "  - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: su - $PROJECT_USER && pm2 restart $PROJECT_NAME"
    log "  - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PM2: su - $PROJECT_USER && ./fix-pm2.sh"
    log "  - –ó–∞–ø—É—Å–∫: su - $PROJECT_USER && ./start-app.sh"
    log ""
    log "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: http://$DOMAIN"
    log ""
    log "üîê –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:"
    log "  certbot --nginx -d $DOMAIN -d www.$DOMAIN"
    log ""
    log "üìã –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å –¥–æ–º–µ–Ω–æ–º:"
    log "  1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è $DOMAIN –∏ www.$DOMAIN"
    log "  2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–º–µ–Ω—ã —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ IP —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
    log "  3. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è DNS (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 24 —á–∞—Å–æ–≤)"
    log "  4. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
    log ""
    log "üìù –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:"
    log "  - MongoDB –ø–∞—Ä–æ–ª—å: $MONGO_PASS"
    log "  - JWT Secret: [—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏]"
    if [ -n "$USER_PASSWORD" ]; then
        log "  - –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $PROJECT_USER: [—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω]"
    fi
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@"
