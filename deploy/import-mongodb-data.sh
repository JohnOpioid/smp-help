#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö MongoDB –Ω–∞ production —Å–µ—Ä–≤–µ—Ä
# –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ –°–ï–†–í–ï–†–ï –ø–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è JSON —Ñ–∞–π–ª–æ–≤

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() { echo -e "${GREEN}[OK]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –æ—Ç root
if [ "$EUID" -ne 0 ]; then
    error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    exit 1
fi

echo -e "${BLUE}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë       –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö MongoDB –¥–ª—è SMP Help                    ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
MONGO_DB="smp-help"
MONGO_USER="help-smp-user"
MONGO_PASS="vTLJP0L5QFJIJ5Ya"

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–±–æ—á—É—é —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±–∞–∑—ã –∏ authSource)
MONGO_URI="mongodb://$MONGO_USER:$MONGO_PASS@localhost:27017/"
AUTH_SOURCE="admin"

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å JSON —Ñ–∞–π–ª–∞–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é /home/mongodb)
DATA_DIR="${1:-/home/mongodb}"

log "–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:"
echo "  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $MONGO_DB"
echo "  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $MONGO_USER"
echo "  Auth Source: $AUTH_SOURCE"
echo "  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏: $DATA_DIR"
echo

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –¥–∞–Ω–Ω—ã–º–∏
if [ ! -d "$DATA_DIR" ]; then
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $DATA_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ø—É—Ç—å_–∫_–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏_—Å_json]"
    error "–ü—Ä–∏–º–µ—Ä: $0 /home/mongodb"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB..."
if mongosh "$MONGO_URI" --quiet --eval "db.version()" > /dev/null 2>&1; then
    log "‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ"
else
    error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MongoDB"
    error "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—á—ë—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ MongoDB –∑–∞–ø—É—â–µ–Ω"
    exit 1
fi

# –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
JSON_FILES=$(find "$DATA_DIR" -name "*.json" | wc -l)
if [ "$JSON_FILES" -eq 0 ]; then
    error "–í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ $DATA_DIR –Ω–µ –Ω–∞–π–¥–µ–Ω–æ JSON —Ñ–∞–π–ª–æ–≤"
    exit 1
fi

log "–ù–∞–π–¥–µ–Ω–æ JSON —Ñ–∞–π–ª–æ–≤: $JSON_FILES"
echo

# –°–ø–∏—Å–æ–∫ –∫–æ–ª–ª–µ–∫—Ü–∏–π –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ (–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ)
COLLECTIONS=(
    "users"
    "categories"
    "drugcategories"
    "drugs"
    "drugs2"
    "mkbcategories"
    "mkbs"
    "localstatuscategories"
    "localstatuses"
    "algorithmcategories"
    "algorithmsections"
    "algorithms"
    "instructions"
    "regions"
    "regionphones"
    "substations"
    "shifttemplates"
    "shifts"
    "shiftalternations"
    "feedbacks"
)

warn "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ —É–¥–∞–ª–∏—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö!"
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–º–ø–æ—Ä—Ç? (y/N): " confirm

if [[ ! $confirm =~ ^[Yy]$ ]]; then
    log "–ò–º–ø–æ—Ä—Ç –æ—Ç–º–µ–Ω—ë–Ω"
    exit 0
fi

echo
log "–ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö..."
echo

# –°—á—ë—Ç—á–∏–∫–∏
SUCCESS_COUNT=0
FAILED_COUNT=0
SKIPPED_COUNT=0

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
for collection in "${COLLECTIONS[@]}"; do
    JSON_FILE="$DATA_DIR/smp-help.$collection.json"
    
    if [ -f "$JSON_FILE" ]; then
        echo -n "üì¶ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º $collection... "
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        FILE_SIZE=$(stat -f%z "$JSON_FILE" 2>/dev/null || stat -c%s "$JSON_FILE" 2>/dev/null)
        FILE_SIZE_MB=$((FILE_SIZE / 1024 / 1024))
        
        if [ "$FILE_SIZE_MB" -gt 10 ]; then
            echo "(—Ñ–∞–π–ª –±–æ–ª—å—à–æ–π: ${FILE_SIZE_MB}MB, –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)"
        else
            echo
        fi
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å –∑–∞–º–µ–Ω–æ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        if mongoimport --uri="$MONGO_URI" \
            --db="$MONGO_DB" \
            --collection="$collection" \
            --file="$JSON_FILE" \
            --drop \
            --jsonArray \
            --authenticationDatabase=admin \
            --quiet; then
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            DOC_COUNT=$(mongosh "${MONGO_URI}${MONGO_DB}" --quiet --eval "db.$collection.countDocuments()" 2>/dev/null || echo "?")
            log "  ‚úÖ $collection –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω ($DOC_COUNT –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤)"
            SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
        else
            error "  ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ $collection"
            FAILED_COUNT=$((FAILED_COUNT + 1))
        fi
    else
        warn "  ‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $JSON_FILE"
        SKIPPED_COUNT=$((SKIPPED_COUNT + 1))
    fi
done

echo
log "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–º–ø–æ—Ä—Ç–∞:"
log "  ‚úÖ –£—Å–ø–µ—à–Ω–æ: $SUCCESS_COUNT"
log "  ‚ùå –û—à–∏–±–æ–∫: $FAILED_COUNT"
log "  ‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: $SKIPPED_COUNT"

echo
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –±–∞–∑–µ
mongosh "${MONGO_URI}${MONGO_DB}" --quiet --eval "
print('üìã –ö–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –±–∞–∑–µ:');
print('');
db.getCollectionNames().forEach(function(name) {
    var count = db[name].countDocuments();
    print('  - ' + name + ': ' + count + ' –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤');
});
"

echo
log "üéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!"
echo
log "üîß –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:"
log "  pm2 restart smp-help"
echo
log "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: http://helpsmp.ru"

