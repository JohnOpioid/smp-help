#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date '+%Y-%m-%d %H:%M:%S')]${NC} $1"
}

log "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º PM2 —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏ —Ñ–∞–π–ª–æ–≤..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd /var/www/helpsmp.ru

# –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json..."
if [ -f "package.json" ]; then
    log "‚úÖ –§–∞–π–ª package.json –Ω–∞–π–¥–µ–Ω"
    if grep -q '"type": "module"' package.json; then
        log "‚ö†Ô∏è package.json —Å–æ–¥–µ—Ä–∂–∏—Ç type: module - –∏—Å–ø–æ–ª—å–∑—É–µ–º .cjs —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è"
        USE_CJS=true
    else
        log "‚úÖ package.json –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç type: module - –∏—Å–ø–æ–ª—å–∑—É–µ–º .js —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è"
        USE_CJS=false
    fi
else
    log "‚ùå –§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π index.js
log "üîß –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π index.js..."
cat > index.js << 'EOF'
const { createServer } = require('http');
const { readFileSync, existsSync } = require('fs');
const { join, extname } = require('path');

const server = createServer((req, res) => {
  try {
    const url = new URL(req.url, 'http://localhost');
    const pathname = url.pathname;
    
    if (pathname === '/') {
      res.writeHead(200, { 'Content-Type': 'text/html' });
      res.end('SMP Help Server is running!');
    } else if (pathname.startsWith('/_nuxt/')) {
      const filePath = join(process.cwd(), pathname);
      if (existsSync(filePath)) {
        const file = readFileSync(filePath);
        const ext = extname(filePath);
        let contentType = 'application/javascript';
        
        if (ext === '.css') contentType = 'text/css';
        if (ext === '.js') contentType = 'application/javascript';
        if (ext === '.json') contentType = 'application/json';
        
        res.writeHead(200, { 'Content-Type': contentType });
        res.end(file);
      } else {
        res.writeHead(404);
        res.end('File not found');
      }
    } else {
      res.writeHead(404);
      res.end('Not Found');
    }
  } catch (error) {
    console.error('Error:', error);
    res.writeHead(500);
    res.end('Internal Server Error');
  }
});

const PORT = process.env.PORT || 3000;
server.listen(PORT, () => {
  console.log(`SMP Help Server running on port ${PORT}`);
});
EOF

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
chmod +x index.js

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PM2
log "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PM2..."
pm2 stop smp-help 2>/dev/null || true
pm2 delete smp-help 2>/dev/null || true

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2 —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
if [ "$USE_CJS" = true ]; then
    log "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2 —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .cjs..."
    cat > ecosystem.config.cjs << 'EOF'
module.exports = {
  apps: [{
    name: 'smp-help',
    script: './index.js',
    cwd: '/var/www/helpsmp.ru',
    instances: 1,
    exec_mode: 'fork',
    env: {
      NODE_ENV: 'production',
      PORT: 3000
    }
  }]
};
EOF
    CONFIG_FILE="ecosystem.config.cjs"
else
    log "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2 —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .js..."
    cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [{
    name: 'smp-help',
    script: './index.js',
    cwd: '/var/www/helpsmp.ru',
    instances: 1,
    exec_mode: 'fork',
    env: {
      NODE_ENV: 'production',
      PORT: 3000
    }
  }]
};
EOF
    CONFIG_FILE="ecosystem.config.js"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º PM2
log "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º PM2 —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π $CONFIG_FILE..."
pm2 start $CONFIG_FILE

# –ñ–¥–µ–º
sleep 3

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å PM2..."
pm2 status

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
log "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏..."
pm2 logs smp-help --lines 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
log "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç 3000..."
if command -v netstat >/dev/null 2>&1; then
    netstat -tlnp | grep :3000 || echo "–ü–æ—Ä—Ç 3000 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
elif command -v ss >/dev/null 2>&1; then
    ss -tlnp | grep :3000 || echo "–ü–æ—Ä—Ç 3000 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
else
    echo "netstat –∏ ss –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ lsof..."
    lsof -i :3000 || echo "–ü–æ—Ä—Ç 3000 –Ω–µ —Å–ª—É—à–∞–µ—Ç—Å—è"
fi

log "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PM2 –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
log "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: https://helpsmp.ru"
