import { defineEventHandler, setHeader } from 'h3'
import connectDB from '~/server/utils/mongodb'

export default defineEventHandler(async (event) => {
  // –û—Ç–∫–ª—é—á–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–≥–æ endpoint
  setHeader(event, 'Cache-Control', 'no-cache, no-store, must-revalidate')
  setHeader(event, 'Pragma', 'no-cache')
  setHeader(event, 'Expires', '0')
  
  try {
    console.log('üîç DB TEST: –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
    console.log('üîç DB TEST: MONGODB_URI:', process.env.MONGODB_URI ? '–Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–ï –ù–ê–°–¢–†–û–ï–ù')
    console.log('üîç DB TEST: NODE_ENV:', process.env.NODE_ENV)
    
    const db = await connectDB()
    console.log('‚úÖ DB TEST: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ')
    
    const connectionState = db.connection.readyState
    const dbName = db.connection.name
    const host = db.connection.host
    const port = db.connection.port
    
    console.log('üîç DB TEST: –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', connectionState)
    console.log('üîç DB TEST: –ò–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', dbName)
    console.log('üîç DB TEST: –•–æ—Å—Ç:', host)
    console.log('üîç DB TEST: –ü–æ—Ä—Ç:', port)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    let collections = []
    try {
      collections = await db.connection.db.listCollections().toArray()
      console.log('üîç DB TEST: –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏:', collections.map(c => c.name))
    } catch (err) {
      console.error('‚ùå DB TEST: –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π:', err)
    }
    
    return {
      success: true,
      timestamp: new Date().toISOString(),
      connection: {
        state: connectionState,
        dbName,
        host,
        port,
        collections: collections.map(c => c.name)
      },
      environment: {
        mongodbUri: process.env.MONGODB_URI ? '–Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–ï –ù–ê–°–¢–†–û–ï–ù',
        nodeEnv: process.env.NODE_ENV
      }
    }
  } catch (error) {
    console.error('‚ùå DB TEST: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error)
    return {
      success: false,
      error: error.message,
      timestamp: new Date().toISOString(),
      environment: {
        mongodbUri: process.env.MONGODB_URI ? '–Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–ï –ù–ê–°–¢–†–û–ï–ù',
        nodeEnv: process.env.NODE_ENV
      }
    }
  }
})
