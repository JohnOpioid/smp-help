import { defineEventHandler, readBody } from 'h3'
import connectDB from '~/server/utils/mongodb'
import Feedback from '~/server/models/Feedback'

// API –¥–ª—è —Å–±–æ—Ä–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
export default defineEventHandler(async (event) => {
  await connectDB()
  
  try {
    const body = await readBody(event)
    const { 
      question, 
      answer, 
      rating, 
      userComment, 
      searchResults, 
      userIdentifier,
      sessionId 
    } = body

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!question || !rating) {
      return { 
        success: false, 
        error: '–ù–µ–æ–±—Ö–æ–¥–∏–º—ã –ø–æ–ª—è question –∏ rating' 
      }
    }

    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
    const feedback = new Feedback({
      originalQuery: question.trim(),
      aiResponse: answer?.trim() || '',
      userFeedback: userComment?.trim() || (rating === 'positive' ? '–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞' : '–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞'),
      searchResults: searchResults || [],
      userIdentifier: userIdentifier || 'anonymous',
      status: 'pending',
      timestamp: new Date()
    })

    await feedback.save()

    console.log(`üìù –ü–æ–ª—É—á–µ–Ω–∞ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å: ${rating} –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "${question}"`)

    return { 
      success: true, 
      message: '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞',
      feedbackId: feedback._id
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏:', error)
    return { 
      success: false, 
      error: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏' 
    }
  }
})
