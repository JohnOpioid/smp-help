import connectDB from '~/server/utils/mongodb'
import User from '~/server/models/User'
import { createError, getMethod, readBody } from 'h3'

export default defineEventHandler(async (event) => {
  if (getMethod(event) !== 'POST') {
    throw createError({
      statusCode: 405,
      message: 'Method Not Allowed'
    })
  }

  try {
    await connectDB()
    
    const body = await readBody(event)
    const { userId, telegramId, username, firstName, lastName, photo_url } = body

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    if (!userId || !telegramId) {
      throw createError({
        statusCode: 400,
        message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è'
      })
    }

    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
    const user = await User.findById(userId)
    
    if (!user) {
      throw createError({
        statusCode: 404,
        message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç Telegram –∫ –¥—Ä—É–≥–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É
    const existingUser = await User.findOne({ 'telegram.id': String(telegramId) })
    
    // –ï—Å–ª–∏ Telegram –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É, –æ—Ç–∫–ª—é—á–∞–µ–º –µ–≥–æ
    if (existingUser && existingUser._id.toString() !== userId) {
      console.log(`üîó Telegram ${telegramId} —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É, –æ—Ç–∫–ª—é—á–∞–µ–º...`)
      existingUser.telegram = undefined
      await existingUser.save()
    }

    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∏–º–µ–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π Telegram, –æ—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ä—ã–π
    if (user.telegram?.id && user.telegram.id !== String(telegramId)) {
      console.log(`üîÑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –¥—Ä—É–≥–æ–π Telegram, –æ—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ä—ã–π...`)
    }

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º Telegram
    user.telegram = {
      id: String(telegramId),
      username: username || '',
      photo_url: photo_url || '',
      auth_date: Date.now()
    }
    
    await user.save()
    
    console.log(`‚úÖ Telegram ${telegramId} –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`)

    return {
      success: true,
      message: 'Telegram —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω',
      user: {
        _id: user._id,
        email: user.email,
        firstName: user.firstName,
        lastName: user.lastName,
        telegram: user.telegram
      }
    }

  } catch (error: any) {
    console.error('Connect Telegram error:', error)
    throw createError({
      statusCode: error.statusCode || 500,
      message: error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ Telegram'
    })
  }
})

