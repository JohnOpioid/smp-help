import connectDB from '~/server/utils/mongodb'
import User from '~/server/models/User'
import { createError, getMethod, readBody } from 'h3'
import { storeAuthCode } from '~/server/utils/telegram-auth-codes'

export default defineEventHandler(async (event) => {
  if (getMethod(event) !== 'POST') {
    throw createError({
      statusCode: 405,
      message: 'Method Not Allowed'
    })
  }

  try {
    await connectDB()
    
    const body = await readBody(event)
    const { id, first_name, username } = body

    if (!id || !first_name) {
      throw createError({
        statusCode: 400,
        message: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö'
      })
    }

    const telegramId = String(id)
    const firstName = first_name
    const usernameValue = username || ''
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π email –∏–∑ Telegram –¥–∞–Ω–Ω—ã—Ö
    const telegramEmail = usernameValue 
      ? `telegram_${usernameValue}@smp.local` 
      : `telegram_${id}@smp.local`

    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let user = await User.findOne({ 
      $or: [
        { email: telegramEmail },
        { 'telegram.id': telegramId }
      ]
    })

    if (!user) {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const crypto = await import('crypto')
      user = await User.create({
        email: telegramEmail,
        password: crypto.randomBytes(32).toString('hex'),
        firstName: firstName,
        lastName: firstName,
        role: 'user',
        telegram: {
          id: telegramId,
          username: usernameValue,
          photo_url: ''
        }
      })
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥
    const code = Math.floor(100000 + Math.random() * 900000).toString()
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥ —Å —Ç–∞–π–º–∞—É—Ç–æ–º 10 –º–∏–Ω—É—Ç
    storeAuthCode(telegramId, user._id.toString(), code, 600)

    console.log(`üîê –ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}: ${code}`)

    return {
      success: true,
      code,
      message: '–ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram'
    }

  } catch (error: any) {
    console.error('Telegram request code error:', error)
    return {
      success: false,
      message: error.message || '–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–¥–∞'
    }
  }
})

