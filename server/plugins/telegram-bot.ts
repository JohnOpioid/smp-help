import { bot } from '~/server/telegram/bot'

export default defineNitroPlugin(async (nitroApp) => {
  if (bot) {
    const siteUrl = process.env.NUXT_PUBLIC_APP_URL || process.env.NUXT_PUBLIC_SITE_URL || (process.env.NODE_ENV === 'development' ? 'https://192.168.1.40:3000' : '')
    console.log('üîç Telegram Bot Configuration:')
    console.log('  NUXT_PUBLIC_APP_URL:', process.env.NUXT_PUBLIC_APP_URL)
    console.log('  NUXT_PUBLIC_SITE_URL:', process.env.NUXT_PUBLIC_SITE_URL)
    console.log('  Selected URL:', siteUrl)
    console.log('  Bot Token:', process.env.TELEGRAM_BOT_TOKEN ? `${process.env.TELEGRAM_BOT_TOKEN.substring(0, 10)}...` : 'NOT SET')
    console.log('  NODE_ENV:', process.env.NODE_ENV)
    
    if (!siteUrl) {
      console.error('‚ùå NUXT_PUBLIC_APP_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å webhook')
      console.error('   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è NUXT_PUBLIC_APP_URL')
      console.error('   –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ polling –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏')
      
      // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –±–µ–∑ URL –∏—Å–ø–æ–ª—å–∑—É–µ–º polling
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ polling
        if (bot.isPolling?.()) {
          console.log('‚è≠Ô∏è Polling —É–∂–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é')
          return
        }
        
        const webhookInfo = await bot.getWebHookInfo()
        console.log('  –¢–µ–∫—É—â–∏–π webhook:', webhookInfo.url)
        
        if (webhookInfo.url) {
          await bot.deleteWebHook()
          console.log('  ‚úÖ Webhook —É–¥–∞–ª–µ–Ω –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏')
        }
        
        bot.startPolling({
          interval: 300,
          params: {
            allowed_updates: ['message', 'callback_query']
          }
        })
        console.log('‚úÖ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ polling (–±–µ–∑ URL)')
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ polling:', error)
      }
      return
    }
    const isHttps = siteUrl.startsWith('https://')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç (Telegram webhook —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö 80, 88, 443, 8443)
    const url = new URL(siteUrl)
    const allowedPorts = ['80', '88', '443', '8443', '']
    const isAllowedPort = allowedPorts.includes(url.port)
    
    if (isHttps && isAllowedPort) {
      // –î–ª—è HTTPS –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—Ç—É –∏—Å–ø–æ–ª—å–∑—É–µ–º webhook
      const webhookUrl = `${siteUrl}/api/telegram/webhook`
      
      console.log('üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –¥–ª—è HTTPS')
      console.log('  Webhook URL:', webhookUrl)
      
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π webhook
        const webhookInfo = await bot.getWebHookInfo()
        console.log('  –¢–µ–∫—É—â–∏–π webhook:', webhookInfo.url)
        
        // –£–¥–∞–ª—è–µ–º webhook –µ—Å–ª–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–∞–Ω–µ–µ
        await bot.deleteWebHook()
        console.log('  ‚úÖ –°—Ç–∞—Ä—ã–π webhook —É–¥–∞–ª–µ–Ω')
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
        await bot.setWebHook(webhookUrl)
        console.log('‚úÖ Telegram bot webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', webhookUrl)
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º polling –µ—Å–ª–∏ –±—ã–ª –∑–∞–ø—É—â–µ–Ω
        if (bot.isPolling?.()) {
          await bot.stopPolling()
          console.log('  ‚úÖ Polling –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook:', error)
      }
    } else {
      // –î–ª—è HTTP –∏–ª–∏ –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø–æ—Ä—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º polling
      console.log('üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ polling –¥–ª—è HTTP/dev')
      
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
        const webhookInfo = await bot.getWebHookInfo()
        console.log('  –¢–µ–∫—É—â–∏–π webhook:', webhookInfo.url)
        
        if (webhookInfo.url) {
          // –ï—Å–ª–∏ webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É–¥–∞–ª—è–µ–º –µ–≥–æ
          await bot.deleteWebHook()
          console.log('  ‚úÖ Webhook —É–¥–∞–ª–µ–Ω –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏')
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ polling
        if (!bot.isPolling?.()) {
          // –ó–∞–ø—É—Å–∫–∞–µ–º polling
          bot.startPolling({
            interval: 300,
            params: {
              allowed_updates: ['message', 'callback_query']
            }
          })
          console.log('‚úÖ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ polling (HTTP –∏–ª–∏ dev –ø–æ—Ä—Ç)')
        } else {
          console.log('‚è≠Ô∏è Polling —É–∂–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é')
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ polling:', error)
      }
    }
  }
})

