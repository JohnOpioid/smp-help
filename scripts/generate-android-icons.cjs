#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∫–æ–Ω–æ–∫ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –°–æ–∑–¥–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏–∑ –æ–¥–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
const ICON_SIZES = {
  'mipmap-mdpi': 48,
  'mipmap-hdpi': 72,
  'mipmap-xhdpi': 96,
  'mipmap-xxhdpi': 144,
  'mipmap-xxxhdpi': 192
};

const SPLASH_SIZES = {
  'drawable-port-mdpi': { width: 320, height: 480 },
  'drawable-port-hdpi': { width: 480, height: 800 },
  'drawable-port-xhdpi': { width: 720, height: 1280 },
  'drawable-port-xxhdpi': { width: 1080, height: 1920 },
  'drawable-port-xxxhdpi': { width: 1440, height: 2560 },
  'drawable-land-mdpi': { width: 480, height: 320 },
  'drawable-land-hdpi': { width: 800, height: 480 },
  'drawable-land-xhdpi': { width: 1280, height: 720 },
  'drawable-land-xxhdpi': { width: 1920, height: 1080 },
  'drawable-land-xxxhdpi': { width: 2560, height: 1440 }
};

// –ü—É—Ç–∏
const ANDROID_RES_PATH = path.join(__dirname, '..', 'android', 'app', 'src', 'main', 'res');
const ICONS_SOURCE_PATH = path.join(__dirname, '..', 'assets', 'icons');
const PUBLIC_PATH = path.join(__dirname, '..', 'public');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ImageMagick
function checkImageMagick() {
  try {
    execSync('magick -version', { stdio: 'ignore' });
    return true;
  } catch (error) {
    try {
      execSync('convert -version', { stdio: 'ignore' });
      return true;
    } catch (error) {
      return false;
    }
  }
}

// –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
function createDirectories() {
  console.log('üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...');
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∏–∫–æ–Ω–æ–∫
  Object.keys(ICON_SIZES).forEach(dir => {
    const dirPath = path.join(ANDROID_RES_PATH, dir);
    if (!fs.existsSync(dirPath)) {
      fs.mkdirSync(dirPath, { recursive: true });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dir}`);
    }
  });
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è splash screen
  Object.keys(SPLASH_SIZES).forEach(dir => {
    const dirPath = path.join(ANDROID_RES_PATH, dir);
    if (!fs.existsSync(dirPath)) {
      fs.mkdirSync(dirPath, { recursive: true });
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dir}`);
    }
  });
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏
function generateIcons(sourceIconPath) {
  console.log('üé® –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏...');
  
  Object.entries(ICON_SIZES).forEach(([dir, size]) => {
    const outputPath = path.join(ANDROID_RES_PATH, dir, 'ic_launcher.png');
    const foregroundPath = path.join(ANDROID_RES_PATH, dir, 'ic_launcher_foreground.png');
    const roundPath = path.join(ANDROID_RES_PATH, dir, 'ic_launcher_round.png');
    
    try {
      // –û—Å–Ω–æ–≤–Ω–∞—è –∏–∫–æ–Ω–∫–∞
      execSync(`magick "${sourceIconPath}" -resize ${size}x${size} "${outputPath}"`, { stdio: 'ignore' });
      
      // Foreground (–¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö –∏–∫–æ–Ω–æ–∫)
      execSync(`magick "${sourceIconPath}" -resize ${size}x${size} "${foregroundPath}"`, { stdio: 'ignore' });
      
      // Round –∏–∫–æ–Ω–∫–∞
      execSync(`magick "${sourceIconPath}" -resize ${size}x${size} "${roundPath}"`, { stdio: 'ignore' });
      
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–∫–æ–Ω–∫–∞ ${size}x${size} –≤ ${dir}`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –¥–ª—è ${dir}:`, error.message);
    }
  });
}

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º splash screen
function generateSplashScreens(sourceSplashPath, sourceIconPath) {
  console.log('üñºÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º splash screen...');
  
  Object.entries(SPLASH_SIZES).forEach(([dir, dimensions]) => {
    const outputPath = path.join(ANDROID_RES_PATH, dir, 'splash.png');
    
    try {
      if (fs.existsSync(sourceSplashPath)) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–π PNG —Ñ–∞–π–ª
        execSync(`magick "${sourceSplashPath}" -resize ${dimensions.width}x${dimensions.height}! "${outputPath}"`, { stdio: 'ignore' });
      } else {
        // –°–æ–∑–¥–∞–µ–º splash screen –∏–∑ SVG –ª–æ–≥–æ—Ç–∏–ø–∞
        const tempIconPath = path.join(ICONS_SOURCE_PATH, 'temp-icon.png');
        
        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º SVG –≤ PNG
        execSync(`magick "${sourceIconPath}" -resize 200x200 "${tempIconPath}"`, { stdio: 'ignore' });
        
        // –°–æ–∑–¥–∞–µ–º splash screen —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º –ø–æ —Ü–µ–Ω—Ç—Ä—É
        execSync(`magick -size ${dimensions.width}x${dimensions.height} xc:"#f8fafc" "${tempIconPath}" -gravity center -composite "${outputPath}"`, { stdio: 'ignore' });
        
        // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if (fs.existsSync(tempIconPath)) {
          fs.unlinkSync(tempIconPath);
        }
      }
      
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω splash ${dimensions.width}x${dimensions.height} –≤ ${dir}`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è splash –¥–ª—è ${dir}:`, error.message);
    }
  });
}

// –°–æ–∑–¥–∞–µ–º XML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
function createXmlConfig() {
  console.log('‚öôÔ∏è –°–æ–∑–¥–∞–µ–º XML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...');
  
  // ic_launcher_background.xml
  const backgroundXml = `<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="ic_launcher_background">#293379</color>
</resources>`;
  
  const backgroundPath = path.join(ANDROID_RES_PATH, 'values', 'ic_launcher_background.xml');
  fs.writeFileSync(backgroundPath, backgroundXml);
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω ic_launcher_background.xml');
  
  // ic_launcher.xml (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∏–∫–æ–Ω–∫–∞)
  const launcherXml = `<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@color/ic_launcher_background"/>
    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
</adaptive-icon>`;
  
  const launcherPath = path.join(ANDROID_RES_PATH, 'mipmap-anydpi-v26', 'ic_launcher.xml');
  fs.writeFileSync(launcherPath, launcherXml);
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω ic_launcher.xml');
  
  // ic_launcher_round.xml
  const roundXml = `<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@color/ic_launcher_background"/>
    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
</adaptive-icon>`;
  
  const roundPath = path.join(ANDROID_RES_PATH, 'mipmap-anydpi-v26', 'ic_launcher_round.xml');
  fs.writeFileSync(roundPath, roundXml);
  console.log('‚úÖ –°–æ–∑–¥–∞–Ω ic_launcher_round.xml');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üöÄ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–∫–æ–Ω–æ–∫ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  console.log('=====================================\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º ImageMagick
  if (!checkImageMagick()) {
    console.error('‚ùå ImageMagick –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    console.log('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ImageMagick: https://imagemagick.org/script/download.php');
    process.exit(1);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã
  const sourceIconPath = path.join(PUBLIC_PATH, 'logo.svg');
  const sourceSplashPath = path.join(ICONS_SOURCE_PATH, 'splash-screen.png');
  
  if (!fs.existsSync(sourceIconPath)) {
    console.error(`‚ùå –ò—Å—Ö–æ–¥–Ω–∞—è –∏–∫–æ–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: ${sourceIconPath}`);
    console.log('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª logo.svg —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ø–∞–ø–∫–µ public/');
    process.exit(1);
  }
  
  if (!fs.existsSync(sourceSplashPath)) {
    console.error(`‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π splash screen –Ω–µ –Ω–∞–π–¥–µ–Ω: ${sourceSplashPath}`);
    console.log('–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª splash-screen.png (1080x1920px) –≤ –ø–∞–ø–∫–µ assets/icons/');
    console.log('–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π logo.svg –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è splash screen');
    process.exit(1);
  }
  
  try {
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    createDirectories();
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏
    generateIcons(sourceIconPath);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º splash screen
    generateSplashScreens(sourceSplashPath, sourceIconPath);
    
    // –°–æ–∑–¥–∞–µ–º XML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    createXmlConfig();
    
    console.log('\nüéâ –í—Å–µ –∏–∫–æ–Ω–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
    console.log('üì± –¢–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: npm run cap:sync');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  main();
}

module.exports = { generateIcons, generateSplashScreens, createXmlConfig };
