// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ PWA –∫—ç—à–∞ –∏ Service Worker
// –ó–∞–ø—É—Å–∫–∞—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–∞–π—Ç–µ

console.log('üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É PWA –∫—ç—à–∞...')

// 1. –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker
if ('serviceWorker' in navigator) {
  navigator.serviceWorker.getRegistrations().then(registrations => {
    console.log(`üì± –ù–∞–π–¥–µ–Ω–æ ${registrations.length} Service Worker —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π`)
    registrations.forEach(registration => {
      console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º Service Worker:', registration.scope)
      registration.unregister()
    })
  })
}

// 2. –û—á–∏—â–∞–µ–º –≤—Å–µ –∫—ç—à–∏
if ('caches' in window) {
  caches.keys().then(cacheNames => {
    console.log(`üíæ –ù–∞–π–¥–µ–Ω–æ ${cacheNames.length} –∫—ç—à–µ–π`)
    cacheNames.forEach(cacheName => {
      console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∫—ç—à:', cacheName)
      caches.delete(cacheName)
    })
  })
}

// 3. –û—á–∏—â–∞–µ–º localStorage –∏ sessionStorage
console.log('üóëÔ∏è –û—á–∏—â–∞–µ–º localStorage –∏ sessionStorage')
localStorage.clear()
sessionStorage.clear()

console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.')