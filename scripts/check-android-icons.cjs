#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–∫–æ–Ω–æ–∫ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –†–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ ImageMagick, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã
 */

const fs = require('fs');
const path = require('path');

// –ü—É—Ç–∏
const ANDROID_RES_PATH = path.join(__dirname, '..', 'android', 'app', 'src', 'main', 'res');
const PUBLIC_PATH = path.join(__dirname, '..', 'public');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
const ICON_SIZES = {
  'mipmap-mdpi': 48,
  'mipmap-hdpi': 72,
  'mipmap-xhdpi': 96,
  'mipmap-xxhdpi': 144,
  'mipmap-xxxhdpi': 192
};

const SPLASH_SIZES = {
  'drawable-port-mdpi': { width: 320, height: 480 },
  'drawable-port-hdpi': { width: 480, height: 800 },
  'drawable-port-xhdpi': { width: 720, height: 1280 },
  'drawable-port-xxhdpi': { width: 1080, height: 1920 },
  'drawable-port-xxxhdpi': { width: 1440, height: 2560 },
  'drawable-land-mdpi': { width: 480, height: 320 },
  'drawable-land-hdpi': { width: 800, height: 480 },
  'drawable-land-xhdpi': { width: 1280, height: 720 },
  'drawable-land-xxhdpi': { width: 1920, height: 1080 },
  'drawable-land-xxxhdpi': { width: 2560, height: 1440 }
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
function log(message) {
  console.log(`‚úÖ ${message}`);
}

function warn(message) {
  console.log(`‚ö†Ô∏è  ${message}`);
}

function error(message) {
  console.log(`‚ùå ${message}`);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∫–æ–Ω–∫–∏
function checkExistingIcons() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∫–æ–Ω–∫–∏...');
  
  const existingIcons = {};
  
  Object.keys(ICON_SIZES).forEach(dir => {
    const dirPath = path.join(ANDROID_RES_PATH, dir);
    if (fs.existsSync(dirPath)) {
      const files = fs.readdirSync(dirPath);
      existingIcons[dir] = files.filter(file => file.endsWith('.png'));
    }
  });
  
  return existingIcons;
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ splash screen
function checkExistingSplash() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ splash screen...');
  
  const existingSplash = {};
  
  Object.keys(SPLASH_SIZES).forEach(dir => {
    const dirPath = path.join(ANDROID_RES_PATH, dir);
    if (fs.existsSync(dirPath)) {
      const files = fs.readdirSync(dirPath);
      existingSplash[dir] = files.filter(file => file.endsWith('.png'));
    }
  });
  
  return existingSplash;
}

// –°–æ–∑–¥–∞–µ–º XML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
function createXmlConfig() {
  console.log('‚öôÔ∏è –°–æ–∑–¥–∞–µ–º XML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é...');
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é values –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  const valuesDir = path.join(ANDROID_RES_PATH, 'values');
  if (!fs.existsSync(valuesDir)) {
    fs.mkdirSync(valuesDir, { recursive: true });
  }
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é mipmap-anydpi-v26 –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  const anydpiDir = path.join(ANDROID_RES_PATH, 'mipmap-anydpi-v26');
  if (!fs.existsSync(anydpiDir)) {
    fs.mkdirSync(anydpiDir, { recursive: true });
  }
  
  // ic_launcher_background.xml
  const backgroundXml = `<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="ic_launcher_background">#293379</color>
</resources>`;
  
  const backgroundPath = path.join(valuesDir, 'ic_launcher_background.xml');
  fs.writeFileSync(backgroundPath, backgroundXml);
  log('–°–æ–∑–¥–∞–Ω ic_launcher_background.xml');
  
  // ic_launcher.xml (–∞–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∏–∫–æ–Ω–∫–∞)
  const launcherXml = `<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@color/ic_launcher_background"/>
    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
</adaptive-icon>`;
  
  const launcherPath = path.join(anydpiDir, 'ic_launcher.xml');
  fs.writeFileSync(launcherPath, launcherXml);
  log('–°–æ–∑–¥–∞–Ω ic_launcher.xml');
  
  // ic_launcher_round.xml
  const roundXml = `<?xml version="1.0" encoding="utf-8"?>
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@color/ic_launcher_background"/>
    <foreground android:drawable="@mipmap/ic_launcher_foreground"/>
</adaptive-icon>`;
  
  const roundPath = path.join(anydpiDir, 'ic_launcher_round.xml');
  fs.writeFileSync(roundPath, roundXml);
  log('–°–æ–∑–¥–∞–Ω ic_launcher_round.xml');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∫–æ–Ω–æ–∫ Android –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
  console.log('=====================================\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–∫–æ–Ω–∫–∏
  const existingIcons = checkExistingIcons();
  const existingSplash = checkExistingSplash();
  
  // –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ñ–∞–π–ª–æ–≤:');
  
  console.log('\nüé® –ò–∫–æ–Ω–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:');
  Object.entries(existingIcons).forEach(([dir, files]) => {
    if (files.length > 0) {
      log(`${dir}: ${files.length} —Ñ–∞–π–ª–æ–≤ (${files.join(', ')})`);
    } else {
      warn(`${dir}: —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç`);
    }
  });
  
  console.log('\nüñºÔ∏è Splash Screen:');
  Object.entries(existingSplash).forEach(([dir, files]) => {
    if (files.length > 0) {
      log(`${dir}: ${files.length} —Ñ–∞–π–ª–æ–≤ (${files.join(', ')})`);
    } else {
      warn(`${dir}: —Ñ–∞–π–ª—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç`);
    }
  });
  
  // –°–æ–∑–¥–∞–µ–º XML –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  createXmlConfig();
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º logo.svg
  const logoPath = path.join(PUBLIC_PATH, 'logo.svg');
  if (fs.existsSync(logoPath)) {
    log(`–ù–∞–π–¥–µ–Ω –ª–æ–≥–æ—Ç–∏–ø: ${logoPath}`);
    console.log('üìã –õ–æ–≥–æ—Ç–∏–ø —Å–æ–¥–µ—Ä–∂–∏—Ç:');
    console.log('   - –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Å–∏–º–≤–æ–ª —Å –∫—Ä–µ—Å—Ç–æ–º');
    console.log('   - –¶–≤–µ—Ç–∞: #293379 (—Ç–µ–º–Ω–æ-—Å–∏–Ω–∏–π), #7ba8da (—Å–≤–µ—Ç–ª–æ-—Å–∏–Ω–∏–π)');
    console.log('   - –†–∞–∑–º–µ—Ä: 248.69x248.69px');
  } else {
    error(`–õ–æ–≥–æ—Ç–∏–ø –Ω–µ –Ω–∞–π–¥–µ–Ω: ${logoPath}`);
  }
  
  console.log('\nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
  console.log('1. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –∏–∫–æ–Ω–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ImageMagick');
  console.log('2. –ó–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ: npm run generate:icons');
  console.log('3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–Ω–ª–∞–π–Ω –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –∏–∫–æ–Ω–æ–∫');
  console.log('4. –û–±–Ω–æ–≤–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: npm run cap:sync');
  
  console.log('\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
if (require.main === module) {
  main();
}

module.exports = { checkExistingIcons, checkExistingSplash, createXmlConfig };
