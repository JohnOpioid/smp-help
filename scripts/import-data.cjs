// scripts/import-data.cjs
const { MongoClient } = require('mongodb')
const fs = require('fs')
const path = require('path')

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/smp-help'

async function importDataToMongoDB() {
  const client = new MongoClient(MONGODB_URI)
  
  try {
    await client.connect()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
    
    const db = client.db('smp-help')
    
    const collections = [
      'drugs', 'drugs2', 'algorithms', 'algorithmcategories', 'algorithmsections',
      'mkbs', 'mkbcategories', 'regions', 'regionphones', 'substations',
      'instructions', 'localstatuses', 'localstatuscategories',
      'shifts', 'shifttemplates', 'shiftalternations', 'categories'
    ]
    
    for (const collectionName of collections) {
      try {
        const filePath = path.join(process.cwd(), 'mongodb', `smp-help.${collectionName}.json`)
        
        if (!fs.existsSync(filePath)) {
          console.log(`‚ö†Ô∏è  –§–∞–π–ª ${filePath} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`)
          continue
        }
        
        const fileContent = fs.readFileSync(filePath, 'utf8')
        const data = JSON.parse(fileContent)
        
        if (!Array.isArray(data)) {
          console.log(`‚ö†Ô∏è  –î–∞–Ω–Ω—ã–µ –≤ ${collectionName} –Ω–µ —è–≤–ª—è—é—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`)
          continue
        }
        
        const collection = db.collection(collectionName)
        
        // –û—á–∏—â–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é –ø–µ—Ä–µ–¥ –∏–º–ø–æ—Ä—Ç–æ–º
        await collection.deleteMany({})
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        if (data.length > 0) {
          await collection.insertMany(data)
          console.log(`‚úÖ ${collectionName}: –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${data.length} –∑–∞–ø–∏—Å–µ–π`)
        } else {
          console.log(`‚ö†Ô∏è  ${collectionName}: —Ñ–∞–π–ª –ø—É—Å—Ç–æ–π`)
        }
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ ${collectionName}:`, error)
      }
    }
    
    console.log('üéâ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à—ë–Ω!')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error)
  } finally {
    await client.close()
  }
}

// –ó–∞–ø—É—Å–∫ –∏–º–ø–æ—Ä—Ç–∞
importDataToMongoDB()
